[{"D:\\latihan\\nodejs\\client-wa\\src\\reportWebVitals.js":"1","D:\\latihan\\nodejs\\client-wa\\src\\App.js":"2","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\Header.jsx":"3","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\Sidebar.jsx":"4","D:\\latihan\\nodejs\\client-wa\\src\\index.js":"5","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\Footer.jsx":"6","D:\\latihan\\nodejs\\client-wa\\src\\pages\\About.jsx":"7","D:\\latihan\\nodejs\\client-wa\\src\\pages\\Home.jsx":"8","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\Tes.js":"9","D:\\latihan\\nodejs\\client-wa\\src\\routes\\index.jsx":"10","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\index.jsx":"11","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\styles\\index.jsx":"12","D:\\latihan\\nodejs\\client-wa\\src\\components\\Content.jsx":"13","D:\\latihan\\nodejs\\client-wa\\src\\store\\index.js":"14","D:\\latihan\\nodejs\\client-wa\\src\\store\\sidebar.js":"15","D:\\latihan\\nodejs\\client-wa\\src\\components\\index.jsx":"16","D:\\latihan\\nodejs\\client-wa\\src\\store\\appbar.js":"17","D:\\latihan\\nodejs\\client-wa\\src\\store\\websocket.js":"18","D:\\latihan\\nodejs\\client-wa\\src\\api\\index.js":"19","D:\\latihan\\nodejs\\client-wa\\src\\components\\Detail.jsx":"20"},{"size":362,"mtime":1607910121740,"results":"21","hashOfConfig":"22"},{"size":508,"mtime":1607995783325,"results":"23","hashOfConfig":"22"},{"size":1145,"mtime":1607997585811,"results":"24","hashOfConfig":"22"},{"size":2285,"mtime":1607997531694,"results":"25","hashOfConfig":"22"},{"size":720,"mtime":1608189200942,"results":"26","hashOfConfig":"22"},{"size":1056,"mtime":1607915973757,"results":"27","hashOfConfig":"22"},{"size":199,"mtime":1607945930926,"results":"28","hashOfConfig":"22"},{"size":4599,"mtime":1608198414401,"results":"29","hashOfConfig":"22"},{"size":6962,"mtime":1607930830991,"results":"30","hashOfConfig":"31"},{"size":349,"mtime":1607920663440,"results":"32","hashOfConfig":"22"},{"size":143,"mtime":1607954445708,"results":"33","hashOfConfig":"22"},{"size":1737,"mtime":1607943034756,"results":"34","hashOfConfig":"22"},{"size":292,"mtime":1607945865508,"results":"35","hashOfConfig":"22"},{"size":305,"mtime":1608085945298,"results":"36","hashOfConfig":"22"},{"size":470,"mtime":1607996851379,"results":"37","hashOfConfig":"22"},{"size":94,"mtime":1608188126301,"results":"38","hashOfConfig":"22"},{"size":575,"mtime":1607997426049,"results":"39","hashOfConfig":"22"},{"size":431,"mtime":1608015843240,"results":"40","hashOfConfig":"41"},{"size":133,"mtime":1608200592891,"results":"42","hashOfConfig":"22"},{"size":3502,"mtime":1608199675748,"results":"43","hashOfConfig":"22"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"16pbgiu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10wfev9",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p5otxm",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"D:\\latihan\\nodejs\\client-wa\\src\\reportWebVitals.js",[],["92","93"],"D:\\latihan\\nodejs\\client-wa\\src\\App.js",["94","95"],"import React, { useState } from 'react';\nimport { Header, Sidebar, Footer } from './layouts';\nimport { Route, Switch } from 'react-router-dom';\nimport Routes from './routes';\n\nfunction App() {\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Header />\n      <Sidebar />\n      <Switch>\n        {Routes.map((prop, key) => (\n          <Route exact path={prop.path} key={prop.path} component={prop.component} />\n        ))}\n      </Switch>\n      {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\Header.jsx",["96"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport useStyles from \"./styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { open } from \"../store/sidebar\";\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { status } = useSelector((state) => state.sidebar);\r\n  const { title } = useSelector((state) => state.appbar);\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: status,\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton, status && classes.hide)}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={() => dispatch(open())}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          { title }\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\Sidebar.jsx",["97","98"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport Routes from \"../routes\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport useStyles from './styles';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { open, close } from '../store/sidebar';\r\nimport { setTitle } from '../store/appbar';\r\n\r\nconst Sidebar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n  const { status } = useSelector(state => state.sidebar);\r\n\r\n  const list = () => (\r\n    <div>\r\n      <List>\r\n        {Routes.map((prop, key) => {\r\n          return (\r\n            <NavLink\r\n              style={{ textDecoration: \"none\", color: \"grey\" }}\r\n              to={prop.path}\r\n              key={key}\r\n              onClick={() => dispatch(setTitle(prop.sidebarName))}\r\n            >\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <InboxIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={prop.sidebarName} />\r\n              </ListItem>\r\n            </NavLink>\r\n          );\r\n        })}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: status,\r\n          [classes.drawerClose]: !status,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: status,\r\n            [classes.drawerClose]: !status,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={() => dispatch(close())}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        {list()}\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\latihan\\nodejs\\client-wa\\src\\index.js",[],"D:\\latihan\\nodejs\\client-wa\\src\\layouts\\Footer.jsx",[],"D:\\latihan\\nodejs\\client-wa\\src\\pages\\About.jsx",[],"D:\\latihan\\nodejs\\client-wa\\src\\pages\\Home.jsx",["99","100","101"],"import React, { useEffect, useState } from \"react\";\r\nimport { Content, Detail } from \"../components\";\r\nimport {\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { api, URL } from \"../api\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst Home = () => {\r\n  const socket = io(URL);\r\n  const [name, setName] = useState(\"\");\r\n  const [deskripsi, setDeskripsi] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  const [empty, setEmpty] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const createUser = async () => {\r\n    if (name == \"\" || deskripsi == \"\") {\r\n      alert(\"Lengkapi nama dan deskripsi server\");\r\n    } else {\r\n      await api\r\n        .post(\"/api/createServer\", {\r\n          name,\r\n          description: deskripsi,\r\n        })\r\n        .then((x) => {\r\n          console.log(x.data);\r\n          getData();\r\n          setName(\"\");\r\n          setDeskripsi(\"\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    await api\r\n      .get(\"/api/getAllClient\")\r\n      .then((x) => {\r\n        const haveRows = (x?.data?.data).length <= 0 ? true : false;\r\n        setEmpty(haveRows);\r\n        setRows(x.data.data);\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const showStatus = (id) => {\r\n    setOpen(true);\r\n    setId(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    socket.on(\"connect\", (data) => {\r\n      socket.on(\"welcome\", (message) => {\r\n        console.log(message);\r\n      });\r\n    });\r\n  }, [empty]);\r\n\r\n  return (\r\n    <Content>\r\n      <form style={{ marginBottom: 15 }}>\r\n        <div>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"component-simple\">\r\n              Masukkan nama server\r\n            </InputLabel>\r\n            <Input\r\n              id=\"component-simple\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"component-simple\">Deskripsi server</InputLabel>\r\n            <Input\r\n              rowsMin={3}\r\n              value={deskripsi}\r\n              onChange={(e) => setDeskripsi(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n      </form>\r\n      <Button onClick={createUser} variant=\"contained\" color=\"primary\">\r\n        Create Server\r\n      </Button>\r\n\r\n      <TableContainer component={Paper} style={{ marginTop: 25 }}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>No</StyledTableCell>\r\n              <StyledTableCell>Nama Server</StyledTableCell>\r\n              <StyledTableCell>Deskripsi</StyledTableCell>\r\n              <StyledTableCell>Detail</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!empty &&\r\n              rows.map((val, idx) => (\r\n                <TableRow key={idx}>\r\n                  <TableCell>{idx + 1}</TableCell>\r\n                  <TableCell>{val.name}</TableCell>\r\n                  <TableCell>{val.description}</TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => showStatus(val.id)}\r\n                    >\r\n                      Detail\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {open && <Detail open={open} close={setOpen} id={id} />}\r\n      {loading && (\r\n        <ReactLoading type=\"spin\" color=\"blue\" height={100} width={100} />\r\n      )}\r\n      {empty && <Typography>No client found</Typography>}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\Tes.js",[],"D:\\latihan\\nodejs\\client-wa\\src\\routes\\index.jsx",["102"],"import { Route } from 'react-router-dom';\r\nimport Home from '../pages/Home';\r\nimport About from '../pages/About';\r\n\r\nconst Routes = [\r\n    {\r\n        path: '/',\r\n        sidebarName: 'Home',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/about',\r\n        sidebarName: 'About',\r\n        component: About\r\n    }\r\n];\r\n\r\nexport default Routes;","D:\\latihan\\nodejs\\client-wa\\src\\layouts\\index.jsx",[],"D:\\latihan\\nodejs\\client-wa\\src\\layouts\\styles\\index.jsx",["103"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default useStyles;","D:\\latihan\\nodejs\\client-wa\\src\\components\\Content.jsx",[],"D:\\latihan\\nodejs\\client-wa\\src\\store\\index.js",[],"D:\\latihan\\nodejs\\client-wa\\src\\store\\sidebar.js",[],"D:\\latihan\\nodejs\\client-wa\\src\\components\\index.jsx",[],"D:\\latihan\\nodejs\\client-wa\\src\\store\\appbar.js",[],"D:\\latihan\\nodejs\\client-wa\\src\\store\\websocket.js",[],"D:\\latihan\\nodejs\\client-wa\\src\\api\\index.js",[],"D:\\latihan\\nodejs\\client-wa\\src\\components\\Detail.jsx",["104","105","106","107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Typography, Card, CardActions, CardContent } from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\nimport { URL } from \"../api\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Detail({ open = false, id, close }) {\r\n  const classes = useStyles();\r\n  const handleClose = () => close(false);\r\n  const [qrImage, setQrImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [ready, setReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const socket = io(URL);\r\n    socket.on(\"connect\", (data) => {\r\n      socket.on(\"welcome\", (message) => {\r\n        console.log(message);\r\n      });\r\n\r\n      socket.emit(\"cek-status\", { id: id });\r\n\r\n      socket.on(`qrcode-${id}`, (message) => {\r\n        setLoading(false);\r\n        setQrImage(message.image);\r\n        console.log(message);\r\n      });\r\n\r\n      socket.on(`ready-${id}`, (message) => {\r\n        setLoading(false);\r\n        setReady(true);\r\n        console.log(message);\r\n      });\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Detail server\r\n            </Typography>\r\n            {/* <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.content}>\r\n          {loading && (\r\n            <ReactLoading type=\"spin\" color=\"blue\" height={250} width={250} />\r\n          )}\r\n          {qrImage != \"\" && (\r\n            <img\r\n              src={qrImage != \"\" ? qrImage : null}\r\n              width={250}\r\n              height={250}\r\n            />\r\n          )}\r\n          <Card className={classes.root}>\r\n            <CardContent>\r\n              {ready && (\r\n                <div>\r\n                  <Typography variant=\"body2\" component=\"p\">\r\n                    phone has connected, your server ready to use\r\n                  </Typography>\r\n                </div>\r\n              )}\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                Api-Key = {id}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"117","line":2,"column":27,"nodeType":"115","messageId":"116","endLine":2,"endColumn":33},{"ruleId":"113","severity":1,"message":"118","line":7,"column":3,"nodeType":"115","messageId":"116","endLine":7,"endColumn":9},{"ruleId":"113","severity":1,"message":"119","line":11,"column":19,"nodeType":"115","messageId":"116","endLine":11,"endColumn":29},{"ruleId":"113","severity":1,"message":"120","line":16,"column":10,"nodeType":"115","messageId":"116","endLine":16,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":50,"column":14,"nodeType":"123","messageId":"124","endLine":50,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":50,"column":33,"nodeType":"123","messageId":"124","endLine":50,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":93,"column":6,"nodeType":"127","endLine":93,"endColumn":13,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"129","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":15},{"ruleId":"113","severity":1,"message":"130","line":1,"column":22,"nodeType":"115","messageId":"116","endLine":1,"endColumn":30},{"ruleId":"113","severity":1,"message":"131","line":9,"column":28,"nodeType":"115","messageId":"116","endLine":9,"endColumn":39},{"ruleId":"125","severity":1,"message":"132","line":65,"column":6,"nodeType":"127","endLine":65,"endColumn":8,"suggestions":"133"},{"ruleId":"121","severity":1,"message":"134","line":97,"column":20,"nodeType":"123","messageId":"124","endLine":97,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":98,"column":13,"nodeType":"137","endLine":102,"endColumn":15},{"ruleId":"121","severity":1,"message":"134","line":99,"column":28,"nodeType":"123","messageId":"124","endLine":99,"endColumn":30},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Button' is defined but never used.","'withRouter' is defined but never used.","'open' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'Route' is defined but never used.","'useTheme' is defined but never used.","'CardActions' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["141"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [empty, socket]",{"range":"146","text":"147"},"Update the dependencies array to be: [id]",{"range":"148","text":"149"},[2241,2248],"[empty, socket]",[1866,1868],"[id]"]